<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.LastModifiedDate"/>
    <fullyQualifiedTypeName name="java.time.ZoneId"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonFormat"/>
    <fullyQualifiedTypeName name="javax.persistence.Temporal"/>
    <fullyQualifiedTypeName name="javax.persistence.TemporalType"/>
    <fullyQualifiedTypeName name="org.springframework.data.auditing.DateTimeProvider"/>
    <fullyQualifiedTypeName name="java.util.TimeZone"/>
    <fullyQualifiedTypeName name="java.util.GregorianCalendar"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Inherited"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Documented"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Retention"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Import"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Target"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.index.Indexed"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Field"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.index.CompoundIndexes"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.index.CompoundIndex"/>
    <fullyQualifiedTypeName name="com.netflix.discovery.util.EurekaEntityTransformers.Transformer"/>
    <fullyQualifiedTypeName name="com.example.demo.jwtFilters.JwtUtils"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.CompanyRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.CouponRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.repository.CustomerRepository"/>
    <fullyQualifiedTypeName name="com.example.demo.exceptions.CompanyNotExistsException"/>
    <fullyQualifiedTypeName name="com.example.demo.exceptions.CouponSystemException"/>
    <fullyQualifiedTypeName name="com.example.demo.exceptions.CustomerAlreadyHasCouponException"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.Coupon"/>
    <fullyQualifiedTypeName name="com.example.demo.exceptions.CouponNotExistsException"/>
    <fullyQualifiedTypeName name="com.example.demo.component.Validations"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.Customer"/>
    <fullyQualifiedTypeName name="com.example.demo.service.SecurityService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.repository.MongoRepository"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
    <fullyQualifiedTypeName name="com.example.demo.jwtFilters.JwtFilterRequest"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="com.netflix.ribbon.proxy.annotation.Http"/>
    <fullyQualifiedTypeName name="com.netflix.ribbon.proxy.annotation.Http.Header"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.EnableWebMvc"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.WebMvcConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.CorsRegistry"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.example.demo.entity.AuthenticationRequest1"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
</qualifiedTypeNameHistroy>
